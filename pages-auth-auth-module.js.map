{"version":3,"sources":["./src/app/pages/auth/record-type/record-type.component.ts","./src/app/pages/auth/record-type/record-type.component.html","./src/app/pages/auth/register-collector/register-collector.component.ts","./src/app/pages/auth/register-collector/register-collector.component.html","./src/app/pages/auth/auth-routing.module.ts","./src/app/pages/auth/login/login.component.ts","./src/app/pages/auth/login/login.component.html","./src/app/pages/auth/register-freelancer/register-freelancer.component.ts","./src/app/pages/auth/register-freelancer/register-freelancer.component.html","./src/app/pages/auth/validate-registration/validate-registration.component.ts","./src/app/pages/auth/validate-registration/validate-registration.component.html","./src/app/pages/auth/auth.module.ts"],"names":[],"mappings":"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","file":"pages-auth-auth-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-record-type',\n  templateUrl: './record-type.component.html',\n  styleUrls: ['./record-type.component.css']\n})\nexport class RecordTypeComponent implements OnInit {\n\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  TuNavigate(path:string){\n    this.router.navigate([path]);\n  }\n\n}\n","<div class=\"context\">\n  <h1><img src=\"../../../../assets/logo/logo-pequeño.svg\" class=\"img-logo\" alt=\"\"> We <span class=\"span-color\">Workers</span></h1>\n    <div class=\"card\" style=\"align-self: center;\">\n      <div class=\"card-body\">\n        <div class=\"container\">\n          <div class=\"content\">\n            <h5 class=\"card-title text-center\">¿Quieres contratar a un freelancer?</h5>\n            <button type=\"button\" class=\"btn btn-primary button\" routerLink=\"../register-collector\">Contratar un freelancer</button>\n          </div>\n          <div class=\"content\">\n            <h5 class=\"card-title text-center\">¿Quieres trabajar como freelancer?</h5>\n            <button type=\"button\" routerLink=\"register-collector\" class=\"btn btn-primary button\" routerLink=\"../register-freelancer\">Trabajar como freelancer</button>\n          </div>\n        </div>\n        <p class=\"text-center\">¿Ya estás registrado?<a (click)=\"TuNavigate('/auth/login')\" class=\"card-link\" style=\"cursor: pointer;\"> Ingresa</a></p>\n        <p class=\"text-center\">Volver al<a (click)=\"TuNavigate('landing')\" class=\"card-link\" style=\"cursor: pointer;\"> Inicio</a></p>\n      </div>\n    </div>\n</div>\n\n\n<div class=\"area\" >\n      <ul class=\"circles\">\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n              <li></li>\n      </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CompareValidator } from 'src/app/core/directives/compare-validator.directive';\nimport { idTipoIdentificacion } from 'src/app/core/models/auth.model';\nimport Swal from 'sweetalert2';\nimport { Router} from '@angular/router';\n\n@Component({\n  selector: 'app-register-collector',\n  templateUrl: './register-collector.component.html',\n  styleUrls: ['./register-collector.component.css']\n})\nexport class RegisterCollectorComponent implements OnInit {\n  registerCollectorForm: FormGroup;\n  signin: boolean;\n  show_button: Boolean = false;\n  show_eye: Boolean = false;\n  show_button_confirm: Boolean = false;\n  show_eye_confirm: Boolean = false;\n  tipodeidentificacion: idTipoIdentificacion[];\n\n  constructor(private service: AuthService, private formBuilder: FormBuilder, private router: Router) {\n    this.registerCollectorForm = this.formBuilder.group({\n      idTipoIdentificacion: ['', Validators.required],\n      identificacion: ['', Validators.required],\n      primerNombre: ['', Validators.required],\n      segundoNombre: ['', Validators.required],\n      primerApellido: ['', Validators.required],\n      segundoApellido: ['', Validators.required],\n      direccion: ['', Validators.required],\n      usuario: ['', Validators.required],\n      clave: ['', Validators.required],\n      confirmarClave: ['',  [Validators.required, CompareValidator('clave')]],\n      razonSocial: ['', Validators.required],\n      rif: ['', Validators.required],\n    })\n  }\n\n  ngOnInit(): void {\n    this.signin = false;\n\n    this.service.typesOfIdentification().subscribe(\n      response =>{\n        this.tipodeidentificacion = response.data.rows;\n      }, error =>{\n        console.log('error', error)\n      }\n    )\n  }\n\n  showPassword(){\n    this.show_button = !this.show_button;\n    this.show_eye = !this.show_eye;\n  }\n\n  showConfirmPassword(){\n    this.show_button_confirm = !this.show_button_confirm;\n    this.show_eye_confirm = !this.show_eye_confirm;\n  }\n\n  postData(form){\n    let data={\n        'persona': {\n          'idTipoIdentificacion': form.idTipoIdentificacion,\n          'identificacion': form.identificacion,\n          'primerNombre': form.primerNombre,\n          'segundoNombre': form.segundoNombre,\n          'primerApellido': form.primerApellido,\n          'segundoApellido': form.segundoApellido\n        },\n        'usuario': {\n          'usuario': form.usuario,\n          'clave': form.clave,\n          'rolesId': \"2\"\n        },\n        \"correo\": {\n          'direccion': form.direccion\n        },\n          'empresa': {\n          'rif': form.rif,\n          'razonSocial': form.razonSocial\n        }\n    };\n    this.service.register(data).subscribe(\n      response =>{\n        console.log(response)\n        Swal.fire({\n          icon: 'success',\n          title: 'Tu registro ha sido guardado',\n          text: `${response.message}`\n        })\n        if(response){\n          // this.router.navigate(['/auth/login']);\n          this.router.navigate(['/auth/validate-registration']);\n        }\n      },error =>{\n        console.log(error)\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: `${error.message}`\n        })\n      }\n    );\n  }\n\n  onlyLetters(e) {\n    const tecla = ( document.all ) ? e.keyCode : e.which; // 2\n    if ( tecla === 8 ) { return true; }\n    const patron = /[A-ZÑa-zñ\\s]/;\n    const te = String.fromCharCode(tecla);\n    return patron.test(te);\n  }\n\n}\n","<section class=\" gradient-custom-2\" *ngIf=\"!signin\">\n  <div class=\"container py-4\">\n    <div class=\"row d-flex justify-content-center align-items-center area1\">\n      <div class=\"col-12\">\n        <div class=\"card card-registration card-registration-2\" style=\"border-radius: 15px; border: none;\">\n          <div class=\"card-body p-0\">\n            <form [formGroup]=\"registerCollectorForm\" autocomplete=\"off\">\n              <div class=\"row g-0\">\n                <div class=\"col-lg-6\">\n                  <div class=\"p-5\">\n                    <h3 class=\"fw-normal mb-4\" style=\"color: #4835d4;\">Informacion General</h3>\n                    <div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <select class=\"form-select\" id=\"floatingSelect\" formControlName=\"idTipoIdentificacion\">\n                              <option selected value=\"\">Selecciona una opción</option>\n                              <option *ngFor=\"let idTipoIdentificacion of tipodeidentificacion\" value=\"{{idTipoIdentificacion.id}}\">{{idTipoIdentificacion.tipo  | uppercase }}</option>\n                            </select>\n                            <label for=\"floatingSelect\" class=\"form-label\">Tipo de identificación</label>\n                            <div class=\"message\" *ngIf=\"registerCollectorForm.get('idTipoIdentificacion').touched && !registerCollectorForm.get('idTipoIdentificacion').valid\">\n                              Seleccione su tipo de identificación\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"identificacion\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Identificación</label>\n                            <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerCollectorForm.get('identificacion').touched && !registerCollectorForm.get('identificacion').valid\">\n                              Por favor escribe tu identificación.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"primerNombre\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Primer Nombre</label>\n                            <div class=\"message\" *ngIf=\"registerCollectorForm.get('primerNombre').touched && !registerCollectorForm.get('primerNombre').valid\">\n                              Por favor escribe tu nombre.\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"segundoNombre\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Segundo Nombre</label>\n                            <div class=\"message\" *ngIf=\"registerCollectorForm.get('segundoNombre').touched && !registerCollectorForm.get('segundoNombre').valid\">\n                              Por favor escribe tu segundo nombre.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"primerApellido\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Primer Apellido</label>\n                            <div class=\"message\" *ngIf=\"registerCollectorForm.get('primerApellido').touched && !registerCollectorForm.get('primerApellido').valid\">\n                              Por favor escribe tu apellido.\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"segundoApellido\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Segundo Apellido</label>\n                            <div class=\"message\" *ngIf=\"registerCollectorForm.get('segundoApellido').touched && !registerCollectorForm.get('segundoApellido').valid\">\n                              Por favor escribe tu segundo apellido.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"mb-4 \">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"direccion\" pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n                        <label for=\"floatingTextarea\" style=\"color: #000;\">Correo</label>\n                        <div class=\"message\" *ngIf=\"registerCollectorForm.get('direccion').hasError('pattern')\">\n                          Correo inválido\n                        </div>\n                        <div class=\"message\" *ngIf=\"registerCollectorForm.get('direccion').touched && !registerCollectorForm.get('direccion').valid\">\n                          Por favor escribe tu Correo.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-lg-6 bg-indigo text-white\">\n                  <div class=\"p-5\">\n                    <h3 class=\"fw-normal mb-4\">Detalles de cuenta</h3>\n\n                    <div class=\"mb-4\">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" formControlName=\"usuario\" id=\"floatingTextarea\">\n                        <label for=\"floatingTextarea\" style=\"color: #000;\">Usuario</label>\n                        <div class=\"message\" *ngIf=\"registerCollectorForm.get('usuario').touched && !registerCollectorForm.get('usuario').valid\">\n                          Por favor escribe tu usuario.\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-4 \">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" [type]=\"show_button ?  'text' : 'password'\" formControlName=\"clave\">\n                        <i [class]=\"show_eye ? 'pi pi-eye' : 'pi pi-eye-slash'\" (click)=\"showPassword()\" id=\"icon-eye\" [style]=\"{'color':'#000'}\"></i>\n                        <label for=\"floatingTextarea\" style=\"color: #000;\">Clave</label>\n                        <div class=\"message\" *ngIf=\"registerCollectorForm.get('clave').touched && !registerCollectorForm.get('clave').valid\">\n                          Por favor escribe tu clave.\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\"col-md-6 mb-4 \">\n                        <div class=\"form-floating\">\n                          <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" [type]=\"show_button_confirm ?  'text' : 'password'\" formControlName=\"confirmarClave\">\n                          <i [class]=\"show_eye_confirm ? 'pi pi-eye' : 'pi pi-eye-slash'\" (click)=\"showConfirmPassword()\" id=\"icon-eye\" [style]=\"{'color':'#000'}\"></i>\n                          <label for=\"floatingTextarea\" style=\"color: #000;\">Confirmar clave</label>\n                          <div class=\"message\" *ngIf=\"registerCollectorForm.get('confirmarClave').touched && !registerCollectorForm.get('confirmarClave').valid\">\n                            Por favor escribe de nuevo tu clave.\n                          </div>\n                          <div class=\"message\" *ngIf=\"registerCollectorForm.get('confirmarClave').hasError('compare')\">\n                            Las contraseñas no coinciden\n                          </div>\n                        </div>\n                      </div>\n\n                      <div class=\"col-md-6 mb-4 \">\n                        <div class=\"form-floating\">\n                          <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"razonSocial\">\n                          <label for=\"floatingTextarea\" style=\"color: #000;\">Razon social</label>\n                          <div class=\"message\" *ngIf=\"registerCollectorForm.get('razonSocial').touched && !registerCollectorForm.get('razonSocial').valid\">\n                            Por favor escribe tu razon social.\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-4\">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"rif\">\n                        <label for=\"floatingTextarea\" style=\"color: #000;\">Rif</label>\n                        <div class=\"message\" *ngIf=\"registerCollectorForm.get('rif').touched && !registerCollectorForm.get('rif').valid\">\n                          Por favor escribe tu rif.\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"aling-button\">\n                      <button type=\"button\" class=\"btn\" data-mdb-ripple-color=\"dark\" (click)=\"postData(registerCollectorForm.value)\" [disabled]=\"!registerCollectorForm.valid\" type=\"submit\">Registrar</button>\n                      <p> ¿Ya estas registrado? <a routerLink=\"../login\" class=\"link-dark\">Ingresa</a></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div class=\"area\" >\n  <ul class=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RecordTypeComponent } from './record-type/record-type.component';\nimport { RegisterCollectorComponent } from './register-collector/register-collector.component';\nimport { RegisterFreelancerComponent } from './register-freelancer/register-freelancer.component';\nimport { ValidateRegistrationComponent } from './validate-registration/validate-registration.component';\n\nconst routes: Routes = [\n  {path:'login', component:LoginComponent},\n  {path: 'record-type', component:RecordTypeComponent},\n  {path: 'register-collector', component:RegisterCollectorComponent},\n  {path: 'register-freelancer', component:RegisterFreelancerComponent},\n  {path: 'validate-registration', component:ValidateRegistrationComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  hide = true;\n  show_button: Boolean = false;\n  show_eye: Boolean = false;\n\n  constructor(private service: AuthService, private formbuilder: FormBuilder, private router : Router) {\n    this.loginForm = this.formbuilder.group({\n      usuario: ['', Validators.required],\n      clave: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    const role = this.service.profile();\n    if(role !== undefined){\n      switch (this.service.getUserRole().rolesid) {\n        case 1:\n          this.router.navigate(['/dashboard/dashboard-freelancer']);\n          break;\n        case 2:\n          this.router.navigate(['/dashboard/dashboard-collector']);\n          break;\n      }\n    }\n  }\n\n  onSubmit(form) {\n    // console.log(form)\n    this.service.login(form).subscribe(\n    response => {\n      this.service.saveToken(response.data);\n      // console.log(this.service.getUserRole())\n      switch (this.service.getUserRole().rolesid) {\n        case 1:\n          this.router.navigate(['/dashboard/dashboard-freelancer']);\n          break;\n        case 2:\n          this.router.navigate(['/dashboard/dashboard-collector']);\n          break;\n      }\n      // console.log('response', response)\n      Swal.fire({\n        icon: 'success',\n        title: `${response.message}`\n      })\n    }, error =>{\n      // console.log('error', error)\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: `${error.error.message}`\n      })\n    });\n  }\n\n  showPassword(){\n    this.show_button = !this.show_button;\n    this.show_eye = !this.show_eye;\n  }\n\n}\n","<section class=\"login\">\n  <!-- <div class=\"bubbles\">\n    <div class=\"circle\"></div>\n    <div class=\"circle\"></div>\n    <div class=\"circle\"></div>\n    <div class=\"circle\"></div>\n  </div> -->\n  <div class=\"container\">\n    <div class=\"d-flex justify-content-center align-items-center flex-wrap\">\n      <div class=\"content\">\n        <div class=\"h4 text-white\">¡Bienvenido de nuevo!</div>\n        <div class=\"fs-5 text-white text-grey\">Introduce tus credenciales para iniciar sesion y empezar a ser del #TeamWeWorkers</div>\n        <img src=\"../../../../assets/images/login/AQUI.gif\" alt=\"\" class=\"image\">\n    </div>\n    <form [formGroup]=\"loginForm\" autocomplete=\"off\">\n      <div class=\"form-card\">\n        <div class=\"card\">\n            <div class=\"card-form\">\n                <p class=\"text-center fs-08 mt-3 title\">Iniciar Sesion</p>\n                <div class=\"form-floating mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"usuario\" placeholder=\"name@example.com\" formControlName=\"usuario\">\n                  <label for=\"floatingInput\"> Usuario</label>\n                  <div class=\"message\" *ngIf=\"loginForm.get('usuario').touched && !loginForm.get('usuario').valid\">\n                    Este campo es requerido\n                  </div>\n                </div>\n                <div class=\"form-floating mb-3\">\n                  <input type=\"email\" class=\"form-control\" id=\"floatingInput\" placeholder=\"name@example.com\" [type]=\"show_button ?  'text' : 'password'\" formControlName=\"clave\">\n                  <i [class]=\"show_eye ? 'pi pi-eye' : 'pi pi-eye-slash'\" (click)=\"showPassword()\" id=\"icon-eye\" [style]=\"{'color':'#000'}\"></i>\n                  <label for=\"floatingInput\">Contraseña</label>\n                  <div class=\"message\" *ngIf=\"loginForm.get('clave').touched && !loginForm.get('clave').valid\">\n                    Este campo es requerido\n                  </div>\n                </div>\n                <div class=\"d-flex justify-content-center button-container\" style=\"flex-direction: column;\">\n                    <button type=\"button\" class=\"btn btn-primary button\" (click)=\"onSubmit(loginForm.value)\" [disabled]=\"loginForm.invalid\" type=\"button\">Iniciar Sesion</button>\n                    <button type=\"button\" class=\"btn btn-primary button2\" routerLink=\"../record-type\">Registrarse</button>\n                    <button type=\"button\" class=\"btn btn-link\" routerLink=\"/\" style=\"padding-top: 0.3rem;\">Volver al inicio</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    </form>\n    </div>\n  </div>\n</section>\n\n<div class=\"area\" >\n  <ul class=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CompareValidator } from 'src/app/core/directives/compare-validator.directive';\nimport { idTipoIdentificacion } from 'src/app/core/models/auth.model';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-register-freelancer',\n  templateUrl: './register-freelancer.component.html',\n  styleUrls: ['./register-freelancer.component.css']\n})\nexport class RegisterFreelancerComponent implements OnInit {\n  registerForm: FormGroup;\n  signin: boolean;\n  show_button: Boolean = false;\n  show_eye: Boolean = false;\n  show_button_confirm: Boolean = false;\n  show_eye_confirm: Boolean = false;\n  tipodeidentificacion: idTipoIdentificacion[];\n\n  constructor(private formbuilder: FormBuilder, private service: AuthService, private router: Router) {\n    this.registerForm = this.formbuilder.group({\n      idTipoIdentificacion: ['', Validators.required],\n      identificacion: ['', Validators.required],\n      primerNombre: ['', Validators.required],\n      primerApellido: ['', Validators.required],\n      segundoNombre: ['', Validators.required],\n      segundoApellido: ['', Validators.required],\n      direccion: ['', Validators.required],\n      usuario: ['', Validators.required],\n      clave: ['', Validators.required],\n      confirmarClave: ['', [Validators.required, CompareValidator('clave')]]\n    });\n  }\n\n  ngOnInit(): void {\n    this.signin = false;\n\n    this.service.typesOfIdentification().subscribe(\n      response =>{\n        this.tipodeidentificacion = response.data.rows;\n      }, error =>{\n        console.log('error', error)\n      }\n    );\n  }\n\n  showPassword(){\n    this.show_button = !this.show_button;\n    this.show_eye = !this.show_eye;\n  }\n\n  showConfirmPassword(){\n    this.show_button_confirm = !this.show_button_confirm;\n    this.show_eye_confirm = !this.show_eye_confirm;\n  }\n\n  postData(form){\n    let data={\n      'persona': {\n        'idTipoIdentificacion': form.idTipoIdentificacion,\n        'identificacion': form.identificacion,\n        'primerNombre': form.primerNombre,\n        'segundoNombre': form.segundoNombre,\n        'primerApellido': form.primerApellido,\n        'segundoApellido': form.segundoApellido\n      },\n      'usuario': {\n        'usuario': form.usuario,\n        'clave': form.clave,\n        'rolesId': \"1\"\n      },\n      'correo': {\n        'direccion': form.direccion\n      }\n    };\n    this.service.register(data).subscribe(\n      response =>{\n        console.log(response)\n        Swal.fire({\n          icon: 'success',\n          title: 'Tu registro ha sido guardado',\n          text: `${response.message}`\n        })\n        if(response){\n          // this.router.navigate(['/auth/login']);\n          this.router.navigate(['/auth/validate-registration']);\n        }\n      },error =>{\n        console.log(error)\n        Swal.fire({\n          icon: 'error',\n          title: 'Oops...',\n          text: `${error.message}`\n        })\n      }\n    );\n  }\n\n  onlyLetters(e) {\n    const tecla = ( document.all ) ? e.keyCode : e.which; // 2\n    if ( tecla === 8 ) { return true; }\n    const patron = /[A-ZÑa-zñ\\s]/;\n    const te = String.fromCharCode(tecla);\n    return patron.test(te);\n  }\n\n}\n\n","<section class=\" gradient-custom-2\"  *ngIf=\"!signin\">\n  <div class=\"container py-5\">\n    <div class=\"row d-flex justify-content-center align-items-center area1\">\n      <div class=\"col-12\">\n        <div class=\"card card-registration card-registration-2\" style=\"border-radius: 15px; border: none;\">\n          <div class=\"card-body p-0\">\n            <form [formGroup]=\"registerForm\" autocomplete=\"off\">\n              <div class=\"row g-0\">\n                <div class=\"col-lg-6\">\n                  <div class=\"p-5\">\n                    <h3 class=\"fw-normal mb-4\" style=\"color: #4835d4;\">Informacion General</h3>\n                    <div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <select class=\"form-select\" id=\"floatingSelect\" formControlName=\"idTipoIdentificacion\">\n                              <option selected value=\"\">Selecciona una opción</option>\n                              <option *ngFor=\"let idTipoIdentificacion of tipodeidentificacion\" value=\"{{idTipoIdentificacion.id}}\">{{idTipoIdentificacion.tipo  | uppercase }}</option>\n                            </select>\n                            <label for=\"floatingSelect\" class=\"form-label\">Tipo de identificación</label>\n                            <div class=\"message\" *ngIf=\"registerForm.get('idTipoIdentificacion').touched && !registerForm.get('idTipoIdentificacion').valid\">\n                              Seleccione su tipo de identificación\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"identificacion\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Identificación</label>\n                            <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('identificacion').touched && !registerForm.get('identificacion').valid\">\n                              Por favor escribe tu identificación.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"primerNombre\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Primer Nombre</label>\n                            <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('primerNombre').touched && !registerForm.get('primerNombre').valid\">\n                              Por favor escribe tu nombre.\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"segundoNombre\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Segundo Nombre</label>\n                            <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('segundoNombre').touched && !registerForm.get('segundoNombre').valid\">\n                              Por favor escribe tu segundo nombre.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"primerApellido\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Primer Apellido</label>\n                            <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('primerApellido').touched && !registerForm.get('primerApellido').valid\">\n                              Por favor escribe tu apellido.\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"segundoApellido\" (keypress)=\"onlyLetters($event)\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Segundo Apellido</label>\n                            <div class=\"message\" *ngIf=\"registerForm.get('segundoApellido').touched && !registerForm.get('segundoApellido').valid\">\n                              Por favor escribe tu segundo apellido.\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div clas=\"row\">\n                      <div class=\"mb-4 col-md\">\n                        <div class=\"form-floating\">\n                          <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"direccion\" pattern=\"[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}\">\n                          <label for=\"floatingTextarea\" style=\"color: #000;\">Correo</label>\n                          <div class=\"message\" *ngIf=\"registerForm.get('direccion').hasError('pattern')\">\n                            Correo inválido\n                          </div>\n                          <div class=\"message\" *ngIf=\"registerForm.get('direccion').touched && !registerForm.get('direccion').valid\">\n                            Por favor escribe tu Correo.\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-lg-6 bg-indigo text-white\">\n                  <div class=\"p-5\">\n                    <h3 class=\"fw-normal mb-4\">Detalles de cuenta</h3>\n                    <div class=\"mb-4\">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" formControlName=\"usuario\">\n                        <label for=\"floatingTextarea\" style=\"color: #000;\">Usuario</label>\n                        <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('usuario').touched && !registerForm.get('usuario').valid\">\n                          Por favor escribe tu usuario.\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"mb-4 \">\n                      <div class=\"form-floating\">\n                        <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" [type]=\"show_button ?  'text' : 'password'\" formControlName=\"clave\">\n                        <i [class]=\"show_eye ? 'pi pi-eye' : 'pi pi-eye-slash'\" (click)=\"showPassword()\" id=\"icon-eye\" [style]=\"{'color':'#000'}\"></i>\n                        <label for=\"floatingTextarea\" style=\"color: #000;\" >Clave</label>\n                        <div id=\"validationServer03Feedback\" class=\"message\" *ngIf=\"registerForm.get('clave').touched && !registerForm.get('clave').valid\">\n                          Por favor escribe tu clave.\n                        </div>\n                      </div>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\" mb-4\">\n                        <div class=\"form-floating\">\n                          <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\" [type]=\"show_button_confirm ?  'text' : 'password'\" formControlName=\"confirmarClave\" [type]=\"repeat ? 'password' : 'text'\">\n                          <i [class]=\"show_eye_confirm ? 'pi pi-eye' : 'pi pi-eye-slash'\" (click)=\"showConfirmPassword()\" id=\"icon-eye\" [style]=\"{'color':'#000'}\"></i>\n                          <label for=\"floatingTextarea\" style=\"color: #000;\" >Confirmar clave</label>\n                          <div class=\"message\" *ngIf=\"registerForm.get('confirmarClave').touched && !registerForm.get('confirmarClave').valid\">\n                            Por favor escribe denuevo tu clave.\n                          </div>\n                          <div class=\"message\" *ngIf=\"registerForm.get('confirmarClave').hasError('compare')\">\n                            Las contraseñas no coinciden\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"aling-button\">\n                      <button class=\"btn\" data-mdb-ripple-color=\"dark\" (click)=\"postData(registerForm.value)\" [disabled]=\"!registerForm.valid\" type=\"button\">Registrarse</button>\n                      <p> ¿Ya estas registrado? <a routerLink=\"../login\" class=\"link-dark\">Ingresa</a></p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div class=\"area\" >\n  <ul class=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n  </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-validate-registration',\n  templateUrl: './validate-registration.component.html',\n  styleUrls: ['./validate-registration.component.css']\n})\nexport class ValidateRegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\" gradient-custom-2\">\n  <br>\n  <br>\n  <br>\n  <div class=\"container py-5\">\n    <div class=\"row d-flex justify-content-center align-items-center area1\">\n      <div class=\"col-12\">\n        <div class=\"card card-registration card-registration-2\" style=\"border-radius: 15px; border: none;\">\n          <div class=\"card-body p-0\">\n            <form autocomplete=\"off\">\n              <div class=\"row g-0\">\n                <div class=\"col-lg-8\" style=\"align-self: center;\">\n                  <div class=\"p-5\">\n                    <h3 class=\"fw-normal mb-4\" style=\"color: #4835d4;\">Confirmación de correo electronico</h3>\n                    <div>\n                      <div class=\"row\">\n                        <div class=\"col-md\">\n                          <div class=\"form-floating mb-4\">\n                            <input class=\"form-control\" placeholder=\"Leave a comment here\" id=\"floatingTextarea\">\n                            <label for=\"floatingTextarea\" style=\"color: #000;\">Numero de confirmación</label>\n                            <!-- <div id=\"validationServer03Feedback\" class=\"message\">\n                              Por favor confirma tu correo.\n                            </div> -->\n                            <button class=\"btn mb-4\" data-mdb-ripple-color=\"dark\" type=\"button\">Confirmar correo</button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-lg-4\">\n                  <img src=\"../../../../assets/images/Register/confirmation.gif\" class=\"img-confirmation\">\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<div class=\"area\" >\n  <ul class=\"circles\">\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n  </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { RecordTypeComponent } from './record-type/record-type.component';\nimport { RegisterCollectorComponent } from './register-collector/register-collector.component';\nimport { RegisterFreelancerComponent } from './register-freelancer/register-freelancer.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { RouterModule } from '@angular/router';\nimport { ValidateRegistrationComponent } from './validate-registration/validate-registration.component';\n\n\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RecordTypeComponent,\n    RegisterCollectorComponent,\n    RegisterFreelancerComponent,\n    ValidateRegistrationComponent\n  ],\n  imports: [\n    CommonModule,\n    AuthRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule\n  ],\n  exports: [\n    RecordTypeComponent,\n    LoginComponent,\n    RegisterCollectorComponent,\n    RegisterFreelancerComponent\n  ],\n  providers: [\n    AuthService\n  ]\n})\nexport class AuthModule { }\n"],"sourceRoot":"webpack:///"}