{"version":3,"sources":["./src/app/core/services/auth.service.ts","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/directives/compare-validator.directive.ts","./src/app/app-routing.module.ts","./src/app/core/helpers/token.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n\nimport { environment } from 'src/environments/environment';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { login, Registrofreelancer, TokenData } from '../models/auth.model';\nimport decode  from 'jwt-decode';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  urlApi = environment.apiBase;\n  tokenKey = 'tk';\n  private loggedIn = new BehaviorSubject<boolean>(false);//inicializacion\n\n  constructor(private http: HttpClient) { }\n\n  register(json: Registrofreelancer): Observable<any>{\n    return this.http.post<Registrofreelancer>(`${this.urlApi}/auth/registrar/`, json);\n  }\n\n  login(json: login): Observable<any>{\n    return this.http.post<login>(`${this.urlApi}/auth/login`, json);\n  }\n\n  typesOfIdentification(): Observable<any>{\n    return this.http.get<any>(`${this.urlApi}/auth/tipos-identificacion/`);\n  }\n\n  get isLoggedIn(){\n    this.getShowMenu();\n    return this.loggedIn.asObservable();\n  }\n\n  getShowMenu(){\n    this.singInValidate();\n    return this.loggedIn;\n  }\n\n  singInValidate(){\n    const session = localStorage.getItem(this.tokenKey);\n    this.loggedIn.next(session ? true : false);//estructura if\n  }\n\n  /*Manipulacion del token*/\n\n  singOut(){\n    this.loggedIn.next(false);\n    localStorage.removeItem(this.tokenKey);\n    localStorage.clear();\n  }\n\n  saveToken(token:string){\n    localStorage.removeItem(this.tokenKey);\n    localStorage.setItem(this.tokenKey, token)\n  }\n\n  gettoken(){\n    return localStorage.getItem(this.tokenKey);\n  }\n\n  profile(): TokenData {\n    if(this.gettoken()){\n      const tokenDecode: TokenData = decode(this.gettoken());\n      return tokenDecode;\n    }else{\n      return undefined;\n    }\n  }\n\n  getUserRole() {\n    const role: any = decode(this.gettoken());\n    //1 - freelancer\n    //2 - collector captador\n    // console.log(role.rolesid);\n    // console.log(typeof role.rolesid);\n    if(role.rolesid === 1) {\n      return {value: true, role: 'freelancer', rolesid: 1};\n    } else {\n      return {value: false, role: 'collector', rolesid: 2};\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  apiBase: 'https://weworkers-server.herokuapp.com/api/v1',\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'WeWorkers';\n}\n","\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CompareValidatorDirective } from './core/directives/compare-validator.directive';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TokenInterceptor } from './core/helpers/token.interceptor';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CompareValidatorDirective,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule,\n    BrowserAnimationsModule,\n    HttpClientModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Directive, Input } from '@angular/core';\nimport { Validator, AbstractControl, ValidationErrors, NG_VALIDATORS, ValidatorFn } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[compare]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: CompareValidatorDirective, multi: true }]\n})\n\nexport class CompareValidatorDirective {\n\n  @Input('compare') controlNameToCompare: string;\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    return CompareValidator(this.controlNameToCompare)(c);\n  }\n\n}\n\nexport function CompareValidator(controlNameToCompare: string): ValidatorFn {\n  return (c: AbstractControl): ValidationErrors | null => {\n    if (c.value === null || c.value.length === 0) {\n      return null;\n    }\n    const controlToCompare = c.root.get(controlNameToCompare);\n    if (controlToCompare) {\n      const subscription: Subscription = controlToCompare.valueChanges.subscribe(() => {\n        c.updateValueAndValidity();\n        subscription.unsubscribe();\n      });\n    }\n    return controlToCompare && controlToCompare.value !== c.value ? { 'compare': true } : null;\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:\"\", redirectTo:'landing', pathMatch:'full'},\n  {path:\"landing\", loadChildren: () => import(\"./pages/landing/landing.module\").then(m => m.LandingModule)},\n  {path:\"auth\", loadChildren: () => import('./pages/auth/auth.module').then(m => m.AuthModule)},\n  {path:\"dashboard\", loadChildren: () => import('./pages/dashboard/dashboard.module').then(m => m.DashboardModule)},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (this.authService.profile() !== undefined) {\n        const authreq = request.clone({ headers: request.headers.set('token', this.authService.gettoken())});\n        return next.handle(authreq).pipe(\n            catchError((err: HttpErrorResponse) => {\n                if (err.status === 403) {\n                    alert(`${err.error.message}`);\n                }\n                return throwError( err );\n            })\n        );\n    } else {\n        return next.handle(request);\n    }\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}